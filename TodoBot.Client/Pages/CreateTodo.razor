@page "/todo/create"
@inject ILiffClient Liff
@inject IJSRuntime JSRuntime
@inject HttpClient httpClient

    <form style="max-width:20rem;">
        <div class="form-group">
            <label for="title">@nameof(Todo.Title)</label>
            <input type="text" name="title" class="form-control" placeholder="@nameof(Todo.Title)" @bind="@Todo.Title" />
        </div>
        <div class="form-group">
            <label for="content">@nameof(Todo.Content)</label>
            <textarea class="form-control" name="content" placeholder="@nameof(Todo.Content)" @bind="@Todo.Content" />
        </div>
        <div class="form-group">
            <label for="status">@nameof(Todo.Status)</label>
            <select class="form-control" name="status" @bind="@Todo.Status">
                <option value="@Status.Ready">@Status.Ready.ToString()</option>
                <option value="@Status.Doing">@Status.Doing.ToString()</option>
                <option value="@Status.Done">@Status.Done.ToString()</option>
                <option value="@Status.Canceled">@Status.Canceled.ToString()</option>
            </select>
        </div>
        <div class="form-group">
            <label for="timeLimit">@nameof(Todo.TimeLimit)</label>
            <input type="datetime-local" class="form-control" name="timeLimit" placeholder="@nameof(Todo.TimeLimit)" @bind="@Todo.TimeLimit" />
        </div>
        <button class="form-control btn btn-primary" onclick="@CreateTodoAsync">Create</button>
    </form>
<div>
    <p class="text-danger">@ErrorMessage</p>
</div>

@functions{
    Todo Todo = new Todo() { TimeLimit = DateTime.Now};
    string ErrorMessage;

    async Task CreateTodoAsync()
    {
        ErrorMessage = "";
        try
        {
            Todo.UserId = Liff.Data.Context.UserId;
            var token = await Liff.GetAccessTokenAsync();

            await httpClient.PostJsonAsync("https://mytaskbot.azurewebsites.net/api/todoList", Todo);
        }
        catch (Exception e)
        {
            ErrorMessage = e.ToString();
        }
    }
}