@page "/todo/list"
@inject ILiffClient Liff
@inject IJSRuntime JSRuntime
@inject HttpClient httpClient

@if (TodoList == null)
{
    <p class="text-info">Loading...</p>
}
else
{
    @foreach (var todo in TodoList)
    {
        <div class="card text-white bg-dark mb-3" style="max-width: 20rem;">
            <div class="card-header">
                @todo.TimeLimit.ToString("yyyy/MM/dd")
                @switch (todo.Status)
                {
                    case Status.Ready:
                        <span class="badge-info float-right">@todo.Status</span>
                        break;
                    case Status.Doing:
                        <span class="badge-primary float-right">@todo.Status</span>
                        break;
                    case Status.Done:
                        <span class="badge-success float-right">@todo.Status</span>
                        break;
                    case Status.Canceled:
                        <span class="badge-secondary float-right">@todo.Status</span>
                        break;
                }
            </div>
            <div class="card-body">
                <p class="card-title">@todo.Title</p>
                <p class="card-text">@todo.Content</p>
            </div>
        </div>
    }
}
<div>
    <p class="text-danger">@ErrorMessage</p>
</div>


@functions{
    IList<Todo> TodoList;
    string ErrorMessage;

    protected override async Task OnParametersSetAsync()
    {
        ErrorMessage = null;
        try
        {
            var json = await httpClient.GetStringAsync($"https://mytaskbot.azurewebsites.net/api/{Liff.Data.Context.UserId}/todoList");
            TodoList = JsonConvert.DeserializeObject<IList<Todo>>(json);
        }
        catch (Exception e)
        {
            ErrorMessage = e.ToString();
        }
    }
}